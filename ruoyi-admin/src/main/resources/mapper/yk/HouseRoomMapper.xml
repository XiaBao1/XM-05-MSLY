<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.system.mapper.HouseRoomMapper">

    <resultMap type="HouseRoom" id="HouseRoomResult">
        <result property="id"    column="id"    />
        <result property="houseId"    column="house_id"    />
        <result property="roomNumber"    column="room_number"    />
        <result property="pricePerDay"    column="price_per_day"    />
        <result property="standard"    column="standard"    />
        <result property="isFree"    column="is_free"    />
    </resultMap>

    <resultMap id="StringResult" type="String"></resultMap>

    <resultMap id="LongResult" type="Long"></resultMap>

    <sql id="selectHouseRoomVo">
        select id, house_id, room_number, price_per_day, standard, is_free from house_room
    </sql>

    <select id="selectHouseRoomList" parameterType="HouseRoom" resultMap="HouseRoomResult">
        <include refid="selectHouseRoomVo"/>
        <where>
            house_id in (select id from landlord_house where host_number = #{userId})
            <if test="houseId != null"> and house_id = #{houseId}</if>
            <if test="roomNumber != null  and roomNumber != ''"> and room_number = #{roomNumber}</if>
            <if test="pricePerDay != null "> and price_per_day = #{pricePerDay}</if>
            <if test="standard != null  and standard != ''"> and standard like concat('%', #{standard}, '%')</if>
            <if test="isFree != null "> and is_free = #{isFree}</if>
            <if test="pricePerDayUp != null "> and #{pricePerDayUp} >= price_per_day</if>
            <if test="pricePerDayDown != null "> and price_per_day >= #{pricePerDayDown}</if>
        </where>
    </select>

    <select id="selectHouseRoomById" parameterType="Long" resultMap="HouseRoomResult">
        <include refid="selectHouseRoomVo"/>
        where id = #{id}
    </select>

    <select id="getAppointNumber" parameterType="HouseRoom" resultType="Integer">
        select count(*) from house_room where house_id in (select id from landlord_house where host_number = #{userId}) and is_free=0
    </select>

    <select id="getUnappointNumber" parameterType="HouseRoom" resultType="Integer">
        select count(*) from house_room where house_id in (select id from landlord_house where host_number = #{userId}) and is_free=1
    </select>

    <select id="getHouseNameById" parameterType="Long" resultType="String">
        select house_name from landlord_house where id=#{id}
    </select>

    <select id="getHouseIdByHouseName" parameterType="HouseRoom" resultMap="StringResult">
        select id from landlord_house where house_name like concat('%',#{houseName},'%') and host_number=#{userId}
    </select>

    <select id="getHouseIdByExactHouseName" parameterType="HouseRoom" resultMap="StringResult">
        select id from landlord_house where house_name=#{houseName} and host_number=#{userId}
    </select>

    <select id="getAllUser" resultType="Integer">
        select count(*) from sys_user;
    </select>

    <select id="getAllHouse" resultType="Integer">
        select count(*) from landlord_house;
    </select>

    <select id="getAllRoomBill" resultType="Integer">
        select count(*) from client_room_record;
    </select>

    <select id="getAllSpecialtyBill" resultType="Integer">
        select count(*) from client_specialty_record;
    </select>

    <select id="getAllSpecialty" resultType="Integer">
        select count(*) from house_specialty;
    </select>

    <select id="getSpecialtyDone" resultType="Integer" parameterType="Long">
        select count(*) from client_specialty_record where client_number=#{userId} and is_done=1
    </select>
    <select id="getRoomDone" resultType="Integer" parameterType="Long">
        select count(*) from client_room_record where client_number=#{userId} and is_done=1
    </select>
    <select id="getSpecialtyUndo" resultType="Integer" parameterType="Long">
        select count(*) from client_specialty_record where client_number=#{userId} and is_done=0
    </select>

    <select id="getRoomUndo" resultType="Integer" parameterType="Long">
        select count(*) from client_room_record where client_number=#{userId} and is_done=0
    </select>

    <select id="getRoomSay" resultType="Integer" parameterType="Long">
        select count(*) from client_room_record where client_number=#{userId} and id in (select room_record_id from client_room_comment)
    </select>

    <select id="getSpecialtySay" resultType="Integer" parameterType="Long">
         select count(*) from client_specialty_record where client_number=#{userId} and id in (select specialty_record_id from client_specialty_comment)
    </select>

    <select id="getRoomUnSay" resultType="Integer" parameterType="Long">
         select count(*) from client_room_record where client_number=#{userId} and id not in (select room_record_id from client_room_comment)
    </select>

    <select id="getSpecialtyUnSay" resultType="Integer" parameterType="Long">
        select count(*) from client_specialty_record where client_number=#{userId} and id not in (select specialty_record_id from client_specialty_comment)
    </select>

    <select id="getToDoDone" parameterType="Long" resultType="Integer">
        select count(*) from user_todolist where status=1 and user_number=(select user_name from sys_user where user_id=#{userId})
    </select>

    <select id="getToDoUndo" parameterType="Long" resultType="Integer">
        select count(*) from user_todolist where status=0 and user_number=(select user_name from sys_user where user_id=#{userId})
    </select>

    <select id="getIdFromRoomRecord" resultMap="LongResult">
        select id from client_room_record limit 5
    </select>

    <select id="getIdFromSpecialtyRecord" resultMap="LongResult">
        select id from client_specialty_record limit 5
    </select>

    <select id="getNameFromRoomRecordById" parameterType="Long" resultType="String">
        select user_name from sys_user where user_id=(select client_number from client_room_record where id=#{id})
    </select>

    <select id="getNameFromSpecialtyRecordById" parameterType="Long" resultType="String">
        select user_name from sys_user where user_id=(select client_number from client_specialty_record where id=#{id})
    </select>

    <select id="getTimeFromRoomRecordById" parameterType="Long" resultType="String">
        select buy_time from client_room_record where id=#{id}
    </select>

    <select id="getTimeFromSpecialtyRecordById" parameterType="Long" resultType="String">
        select order_time from client_specialty_record where id=#{id}
    </select>

    <select id="getLandlordFromRoomRecordById" parameterType="Long" resultType="String">
        select house_name from landlord_house where id=(select house_id from house_room where house_room.id=(select room_id from client_room_record where client_room_record.id=#{id}))
    </select>

    <select id="getLandlordFromSpecialtyRecordById" parameterType="Long" resultType="String">
        select house_name from landlord_house where id=(select house_id from house_specialty where house_specialty.id=(select specialty_id from client_specialty_record where client_specialty_record.id=#{id}))
    </select>

    <select id="getRoomNumberFromRoomRecordById" parameterType="Long" resultType="String">
        select room_number from house_room where house_room.id=(select room_id from client_room_record where client_room_record.id=#{id})
    </select>

    <select id="getSpecialtyNameFromSpecialtyRecordById" parameterType="Long" resultType="String">
        select specialty_name from house_specialty where house_specialty.id=(select specialty_id from client_specialty_record where client_specialty_record.id=#{id})
    </select>

    <select id="getNumberFromSpecialtyRecordById" parameterType="Long" resultType="String">
        select quantity from client_specialty_record where id=#{id}
    </select>

    <select id="getHouseAddress" resultMap="StringResult">
        select province from landlord_house
    </select>

    <insert id="insertHouseRoom" parameterType="HouseRoom" useGeneratedKeys="true" keyProperty="id">
        insert into house_room
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="houseId != null ">house_id,</if>
            <if test="roomNumber != null and roomNumber != ''">room_number,</if>
            <if test="pricePerDay != null">price_per_day,</if>
            <if test="standard != null and standard != ''">standard,</if>
            <if test="isFree != null">is_free,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <!--            <if test="houseId != null">#{houseId},</if>-->
            <if test="houseId != null">IF(#{houseId} IN (select id from landlord_house where host_number = #{userId}),#{houseId},null),</if>
            <if test="roomNumber != null and roomNumber != ''">#{roomNumber},</if>
            <if test="pricePerDay != null">#{pricePerDay},</if>
            <if test="standard != null and standard != ''">#{standard},</if>
            <if test="isFree != null">#{isFree},</if>
        </trim>
    </insert>

    <update id="updateHouseRoom" parameterType="HouseRoom">
        update house_room
        <trim prefix="SET" suffixOverrides=",">
            <if test="houseId != null">house_id = IF(#{houseId} IN (select id from landlord_house where host_number = #{userId}),#{houseId},null),</if>
            <if test="roomNumber != null and roomNumber != ''">room_number = #{roomNumber},</if>
            <if test="pricePerDay != null">price_per_day = #{pricePerDay},</if>
            <if test="standard != null and standard != ''">standard = #{standard},</if>
            <if test="isFree != null">is_free = #{isFree},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHouseRoomById" parameterType="Long">
        delete from house_room where id = #{id}
    </delete>

    <delete id="deleteHouseRoomByIds" parameterType="String">
        delete from house_room where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>